---
title: "CEVE 101: Project 03"
author: "Larry DeBose IV (ld66)" # CHANGE THIS
date: "2024-10-23"

# do not change anything below this line
engine: julia
code-annotations: hover
format:
    html: default
    docx: default
---

We begin by loading the required packages

```{julia}
using Revise                      # <1>
using RainwaterHarvesting         # <2>
```

1. `Revise` allows us to update code without restarting Julia.
2. We load the `RainwaterHarvesting` package that contains our simulation tools.

### Setting the file path

Next, we specify the path to the rainfall data file and read it in.

```{julia}
filepath = "data/71.txt" # <1>   
rainfall_data = RainfallData(filepath) # <2>
```

1. This is the path to the rainfall data file for the station of interest.
2. This creates a `RainfallData` object containing the rainfall data for the specified station.

If we dig under the hood a bit, we can see that there are two main pieces of information:

- `station_info`: a dictionary containing information about the station, such as its name and location.
- `annual_data`: a dictionary mapping years to `AnnualRainfallData` objects, each containing the date and precipitation data for a given year.

### Plotting the Data

We can plot the data for one or all of the years to verify that it looks correct.

```{julia}
plot(rainfall_data) # <1>
```

1. This `plot` function is defined in [viz.jl](./RainwaterHarvesting/src/viz.jl) and is a thin wrapper around the Plots.jl package.

### Discussion

The data is sufficient for meaningful risk assesments.This storage tank dd not run out of water. Although it got low during a drought from aout June to December, but got some rain at the end of the year to keep the storage tank with some liquid in it. According to my research, the years of droughts in Ceara, Brazil include 1915, 1931, 1973, 1983, 1993, and 1998. The data shows droughts for the years after 1973 listed previously-1983,1993,1998-. The rainfall totals are drastically lower on the drought year's max and average rainfall.

## Understanding the Theoretical Model



This model makes two major assumptiuons.
First, the household begins using water from the tank after the 150th day of the year.
This is based on the idea that the rainy season lasts for about the first 150 days of the year, and so they may have other sources of water before then.
The second assumption is that each household consumes 74.1 liters per day during the dry season.
How does this compare to your household's water usage?
I feel that my family most likely uses more water per day than these households. Firstly, we get a bunch of rain in houston and have many lakes so droughts do not affect us as much. Secondly, we do not collect rain water and do not face water shortage problems, so we are more comfortable using extra water without even giving it a second thought. We are not using from a limited supply, and if we are and I am unaware we have never ran out.

## Model Implementation and Testing

### Defining the Model Parameters

We can define the model parameters with sensible default values.
You will have the opportunity to change these values later.

```{julia}
#| output: false
param = ModelParameters(          # <1>
    runoff_coefficient=0.85,      # <2>
    roof_area_m2=60.0,            # <3>
    first_flush_mm=2.0,           # <4>
    tank_capacity_L=16000.0       # <5>
)
```

1. This creates a `ModelParameters` object with the specified parameters.
2. The runoff coefficient ($\eta$) is a measure of how much of the rain that falls on the roof ends up in the tank.
3. The roof area ($A$) is the area of the roof that the rain falls on.
4. The first flush volume ($V_f$) is the volume of rain that is discarded because it is dirty.
5. The tank capacity ($V_\text{max}$) is the maximum volume of the tank.

### Running the Simulation for One Year

Let's run the model for the year 1981.

```{julia}
rainfall_1981 = rainfall_data.annual_data[1981]    # <1>
results_1981 = run_timesteps(rainfall_1981, param) # <2>
p1 = plot(results_1981)                                 # <3>
```

1. We select the annual rainfall data for the year 1981.
2. We run the simulation for the year 1981.
3. We plot the results, again using a `plot` function defined in [viz.jl](./RainwaterHarvesting/src/viz.jl).

To compare rainfall and tank volume:

```{julia}
p2 = plot(rainfall_1981)
plot(p2, p1, layout=(2, 1), size=(1000, 700), link=:x)
```

With the modified parameters, I created a scenario of buying a new - bigger - house. The roof was modified fron 45m -> 60m. The data shows that the tank reached max capacity about two months earlier. Since the tank was not upgraded with the roof in the new house. The tank ran out at about the same timedue to the fixed amount of drinking after the rainy season. If I were to create a scenario where the tank was replaced with a larger volume tank, the family will be able to collect extra water and may become empty later or not at all if the tank is large enough and enough rain falls on that year.

### Reliability Analysis

We can run simulations for all years, one at a time, and then check how many times the tank runs dry.
You can run simulations for all years at once with the following code:

```{julia}
all_years = sort(collect(keys(rainfall_data.annual_data)))          # <1>
all_results = [run_timesteps(rainfall_data.annual_data[year], param) for year in all_years]   # <2>
any_failures = [!isempty(result.failure_dates) for result in all_results]  # <3>
println("Number of years with failures: ", sum(any_failures), " out of ", length(all_years))  # <4>
```

1. We get all the years in order.
2. We run the simulation for each year.
3. We check if any failures occurred.
4. We print the number of years with failures and the total number of years.

Number of years with failures: 10 out of 49.
I believe the years of failure are years with higher amounts of daily rainfall. There are exactly 10 places - years - on the graph above 10mm of daily rainfall. These could bethe years that the tank failed or overflowed.
